// <auto-generated />
using System;
using HospitalCmsSystem.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalCmsSystem.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240317231952_1004")]
    partial class _1004
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GitHubAcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GitHubAcc = "GitHubUser1",
                            Name = "Ahmet"
                        },
                        new
                        {
                            Id = 2,
                            GitHubAcc = "GitHubUser2",
                            Name = "Mehmet"
                        },
                        new
                        {
                            Id = 5,
                            GitHubAcc = "GitHubUser5",
                            Name = "Hıdır"
                        },
                        new
                        {
                            Id = 3,
                            GitHubAcc = "GitHubUser3",
                            Name = "Şevval"
                        },
                        new
                        {
                            Id = 4,
                            GitHubAcc = "GitHubUser4",
                            Name = "Uğur"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(882),
                            UpdatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(882)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(884),
                            UpdatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(884)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(885),
                            UpdatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(886)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(886),
                            UpdatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(887)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(888),
                            UpdatedAt = new DateTime(2024, 3, 17, 23, 19, 51, 787, DateTimeKind.Utc).AddTicks(888)
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            CreatedAt = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            ImagePath = "path/to/image1.jpg",
                            IsActive = true,
                            Password = "password123",
                            Phone = "123-456-7890",
                            UpdatedAt = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = 2,
                            City = "Los Angeles",
                            CreatedAt = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            FullName = "Jane Smith",
                            ImagePath = "path/to/image2.jpg",
                            IsActive = true,
                            Password = "password456",
                            Phone = "098-765-4321",
                            UpdatedAt = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "janesmith"
                        },
                        new
                        {
                            Id = 3,
                            City = "Chicago",
                            CreatedAt = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            FullName = "Alice Johnson",
                            ImagePath = "path/to/image3.jpg",
                            IsActive = true,
                            Password = "password789",
                            Phone = "555-666-7777",
                            UpdatedAt = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "alicejohnson"
                        },
                        new
                        {
                            Id = 4,
                            City = "Houston",
                            CreatedAt = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.brown@example.com",
                            FullName = "Bob Brown",
                            ImagePath = "path/to/image4.jpg",
                            IsActive = true,
                            Password = "password101",
                            Phone = "222-333-4444",
                            UpdatedAt = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "bobbrown"
                        },
                        new
                        {
                            Id = 5,
                            City = "Phoenix",
                            CreatedAt = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.davis@example.com",
                            FullName = "Charlie Davis",
                            ImagePath = "path/to/image5.jpg",
                            IsActive = true,
                            Password = "password202",
                            Phone = "999-888-7777",
                            UpdatedAt = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "charliedavis"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoleId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            RoleId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppointmentManagerId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentManagerId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2023, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentManagerId = 1,
                            DepartmentId = 1,
                            DoctorId = 1,
                            Email = "patient1@example.com",
                            FullName = "Patient One",
                            Message = "Looking forward to the appointment",
                            PatientId = 1,
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2023, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentManagerId = 2,
                            DepartmentId = 2,
                            DoctorId = 2,
                            Email = "patient2@example.com",
                            FullName = "Patient Two",
                            Message = "Please confirm the appointment time",
                            PatientId = 2,
                            Phone = "1234567891"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2023, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentManagerId = 3,
                            DepartmentId = 3,
                            DoctorId = 3,
                            Email = "patient3@example.com",
                            FullName = "Patient Three",
                            Message = "I may need to reschedule",
                            PatientId = 3,
                            Phone = "1234567892"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentManagerId = 4,
                            DepartmentId = 4,
                            DoctorId = 4,
                            Email = "patient4@example.com",
                            FullName = "Patient Four",
                            Message = "Looking for more information",
                            PatientId = 4,
                            Phone = "1234567893"
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2023, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentManagerId = 5,
                            DepartmentId = 5,
                            DoctorId = 5,
                            Email = "patient5@example.com",
                            FullName = "Patient Five",
                            Message = "Confirming the appointment details",
                            PatientId = 5,
                            Phone = "1234567894"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppointmentManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("AppointmentManagers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            EndingTime = new DateTime(2023, 1, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 1,
                            StartingTime = new DateTime(2023, 1, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            EndingTime = new DateTime(2023, 2, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 2,
                            StartingTime = new DateTime(2023, 2, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            EndingTime = new DateTime(2023, 3, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 3,
                            StartingTime = new DateTime(2023, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 4,
                            EndingTime = new DateTime(2023, 4, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 4,
                            StartingTime = new DateTime(2023, 4, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 5,
                            EndingTime = new DateTime(2023, 5, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 5,
                            StartingTime = new DateTime(2023, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            Categories = "[\"Health\",\"Cardiology\",\"Wellness\"]",
                            Content = "An introductory guide to maintaining a healthy heart.",
                            Tags = "[\"Health\"]",
                            Title = "Heart Health 101"
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            Categories = "[\"Science\",\"Neurology\",\"Research\"]",
                            Content = "Exploring recent breakthroughs in neuroscientific research.",
                            Tags = "[\"Science\"]",
                            Title = "Advancements in Neurology"
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            Categories = "[\"Nutrition\",\"Gastroenterology\",\"Diet\"]",
                            Content = "Dietary habits to support your gastrointestinal system.",
                            Tags = "[\"Nutrition\"]",
                            Title = "Nutrition for Digestive Health"
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            Categories = "[\"Orthopedics\",\"Innovation\",\"Care\"]",
                            Content = "The future of musculoskeletal treatments and patient care.",
                            Tags = "[\"Orthopedics\"]",
                            Title = "Orthopedic Innovations"
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            Categories = "[\"Dermatology\",\"Skincare\",\"Lifestyle\"]",
                            Content = "Personalized skincare approaches for every stage of life.",
                            Tags = "[\"Dermatology\"]",
                            Title = "Skincare Routines for All Ages"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            BlogId = 1,
                            Comment = "Great article!",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            BlogId = 1,
                            Comment = "Very informative, thanks!",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            BlogId = 2,
                            Comment = "Thanks for sharing.",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            BlogId = 2,
                            Comment = "Interesting read!",
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            BlogId = 3,
                            Comment = "Helpful article.",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.BlogImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            ImagePath = "path/to/blog/image1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 1,
                            ImagePath = "path/to/blog/image2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 2,
                            ImagePath = "path/to/blog/image3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 2,
                            ImagePath = "path/to/blog/image4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 3,
                            ImagePath = "path/to/blog/image5.jpg"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            Message = "I have a question about...",
                            Phone = "1234567890",
                            Title = "Inquiry"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.doe@example.com",
                            FullName = "Jane Doe",
                            Message = "I need assistance with...",
                            Phone = "0987654321",
                            Title = "Support"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sam.smith@example.com",
                            FullName = "Sam Smith",
                            Message = "Here's what I think...",
                            Phone = "1112223333",
                            Title = "Feedback"
                        },
                        new
                        {
                            Id = 4,
                            Email = "alex.johnson@example.com",
                            FullName = "Alex Johnson",
                            Message = "I want to schedule an appointment...",
                            Phone = "4445556666",
                            Title = "Booking"
                        },
                        new
                        {
                            Id = 5,
                            Email = "patricia.williams@example.com",
                            FullName = "Patricia Williams",
                            Message = "I have a complaint about...",
                            Phone = "7778889999",
                            Title = "Complaint"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentDetailsId = 1,
                            Description = "Heart related specialties",
                            ImagePath = "path/to/image1.jpg",
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentDetailsId = 2,
                            Description = "Brain and nerves specialties",
                            ImagePath = "path/to/image2.jpg",
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentDetailsId = 3,
                            Description = "Digestive system specialties",
                            ImagePath = "path/to/image3.jpg",
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentDetailsId = 4,
                            Description = "Children's health specialties",
                            ImagePath = "path/to/image4.jpg",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentDetailsId = 5,
                            Description = "Bones and joints specialties",
                            ImagePath = "path/to/image5.jpg",
                            Name = "Orthopedics"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DepartmentBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DepartmentBlogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            DepartmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            DepartmentId = 2
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 3,
                            DepartmentId = 3
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 4,
                            DepartmentId = 4
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 5,
                            DepartmentId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DepartmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.ToTable("DepartmentDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            DescriptionLong = "Long and detailed description of Cardiology, its services, and treatments.",
                            DescriptionShort = "Short description of Cardiology",
                            Title = "About Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            DescriptionLong = "Long and detailed description of Neurology, its services, and treatments.",
                            DescriptionShort = "Short description of Neurology",
                            Title = "About Neurology"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            DescriptionLong = "Long and detailed description of Gastroenterology, its services, and treatments.",
                            DescriptionShort = "Short description of Gastroenterology",
                            Title = "About Gastroenterology"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            DescriptionLong = "Long and detailed description of Orthopedics, its services, and treatments.",
                            DescriptionShort = "Short description of Orthopedics",
                            Title = "About Orthopedics"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            DescriptionLong = "Long and detailed description of Dermatology, its services, and treatments.",
                            DescriptionShort = "Short description of Dermatology",
                            Title = "About Dermatology"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DocFacebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocLinkedIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocPinterest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSkype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntroductionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Speacialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            DocFacebook = "facebook.com/DocA",
                            DocLinkedIn = "linkedin.com/DocA",
                            DocPinterest = "pinterest.com/DocA",
                            DocSkype = "skype.com/DocA",
                            DocTitle = "Dr. A",
                            DocX = "twitter.com/DocA",
                            IntroductionId = 1,
                            Name = "Ahmet",
                            RoleId = 1,
                            Speacialty = "Specialty A"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            DocFacebook = "facebook.com/DocB",
                            DocLinkedIn = "linkedin.com/DocB",
                            DocPinterest = "pinterest.com/DocB",
                            DocSkype = "skype.com/DocB",
                            DocTitle = "Dr. B",
                            DocX = "twitter.com/DocB",
                            IntroductionId = 2,
                            Name = "Şevval",
                            RoleId = 2,
                            Speacialty = "Specialty B"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            DocFacebook = "facebook.com/DocC",
                            DocLinkedIn = "linkedin.com/DocC",
                            DocPinterest = "pinterest.com/DocC",
                            DocSkype = "skype.com/DocC",
                            DocTitle = "Dr. C",
                            DocX = "twitter.com/DocC",
                            IntroductionId = 3,
                            Name = "Mehmet",
                            RoleId = 3,
                            Speacialty = "Specialty C"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            DocFacebook = "facebook.com/DocD",
                            DocLinkedIn = "linkedin.com/DocD",
                            DocPinterest = "pinterest.com/DocD",
                            DocSkype = "skype.com/DocD",
                            DocTitle = "Dr. D",
                            DocX = "twitter.com/DocD",
                            IntroductionId = 4,
                            Name = "Uğur",
                            RoleId = 4,
                            Speacialty = "Specialty D"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            DocFacebook = "facebook.com/DocE",
                            DocLinkedIn = "linkedin.com/DocE",
                            DocPinterest = "pinterest.com/DocE",
                            DocSkype = "skype.com/DocE",
                            DocTitle = "Dr. E",
                            DocX = "twitter.com/DocE",
                            IntroductionId = 5,
                            Name = "Hıdır",
                            RoleId = 5,
                            Speacialty = "Specialty E"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DoctorPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("DoctorPatients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            PatientId = 2
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            PatientId = 3
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 4,
                            PatientId = 4
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 5,
                            PatientId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntroductionId")
                        .HasColumnType("int");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("IntroductionId");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            Explanation = "Bachelor's Degree in Medicine",
                            University = "University A",
                            Year = "2000-2004"
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            Explanation = "Bachelor's Degree in Neurology",
                            University = "University B",
                            Year = "2001-2005"
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            Explanation = "Bachelor's Degree in Gastroenterology",
                            University = "University C",
                            Year = "2002-2006"
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 4,
                            Explanation = "Bachelor's Degree in Pediatrics",
                            University = "University D",
                            Year = "2003-2007"
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 5,
                            Explanation = "Bachelor's Degree in Orthopedics",
                            University = "University E",
                            Year = "2004-2008"
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Introduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("MySkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingHourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId")
                        .IsUnique();

                    b.HasIndex("WorkingHourId");

                    b.ToTable("Introductions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Experienced Cardiologist",
                            DoctorId = 1,
                            MySkills = "Cardiology, Surgery",
                            WorkingHourId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Expert in Neurology",
                            DoctorId = 2,
                            MySkills = "Neurology, Patient Care",
                            WorkingHourId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gastroenterology Specialist",
                            DoctorId = 3,
                            MySkills = "Gastroenterology, Diagnostics",
                            WorkingHourId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Pediatrics Department",
                            DoctorId = 4,
                            MySkills = "Pediatrics, Child Care",
                            WorkingHourId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Orthopedics Surgeon",
                            DoctorId = 5,
                            MySkills = "Orthopedics, Joint Surgery",
                            WorkingHourId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDischarged")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Diagnosis = "Condition A",
                            IsDischarged = false,
                            Name = "A",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Diagnosis = "Condition B",
                            IsDischarged = true,
                            Name = "B",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Diagnosis = "Condition C",
                            IsDischarged = false,
                            Name = "C",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Diagnosis = "Condition D",
                            IsDischarged = true,
                            Name = "D",
                            RoleId = 4
                        },
                        new
                        {
                            Id = 5,
                            Diagnosis = "Condition E",
                            IsDischarged = false,
                            Name = "E",
                            RoleId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Surgery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SurgeryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PatientId");

                    b.ToTable("Surgeries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            PatientId = 1,
                            SurgeryDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            PatientId = 2,
                            SurgeryDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            PatientId = 3,
                            SurgeryDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            PatientId = 4,
                            SurgeryDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            PatientId = 5,
                            SurgeryDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.SurgeryDoctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("SurgeryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("SurgeryId");

                    b.ToTable("SurgeryDoctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            SurgeryId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            SurgeryId = 2
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 3,
                            SurgeryId = 3
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 4,
                            SurgeryId = 4
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 5,
                            SurgeryId = 5
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.WorkingHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentManagerId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsOffDay")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentManagerId");

                    b.HasIndex("DoctorId");

                    b.ToTable("WorkingHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = 1,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsOffDay = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = 2,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsOffDay = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = 6,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            IsOffDay = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = 0,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            IsOffDay = false,
                            StartTime = new TimeSpan(0, 9, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = 4,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            IsOffDay = true,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppointmentManager", "AppointmentManager")
                        .WithMany()
                        .HasForeignKey("AppointmentManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointmentManager");

                    b.Navigation("Department");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppointmentManager", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Blog", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.BlogComment", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.BlogImage", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Blog", "Blog")
                        .WithMany("BlogImages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DepartmentBlog", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Blog", "Blog")
                        .WithMany("DepartmentBlogs")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Department", "Department")
                        .WithMany("DepartmentBlogs")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DepartmentDetail", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Department", "Departments")
                        .WithOne("DepartmentDetails")
                        .HasForeignKey("HospitalCmsSystem.Domain.Entities.DepartmentDetail", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.DoctorPatient", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorPatients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("DoctorPatients")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Education", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Educations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Introduction", null)
                        .WithMany("Educations")
                        .HasForeignKey("IntroductionId");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Introduction", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithOne("Introduction")
                        .HasForeignKey("HospitalCmsSystem.Domain.Entities.Introduction", "DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.WorkingHour", "WorkingHour")
                        .WithMany()
                        .HasForeignKey("WorkingHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("WorkingHour");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Patient", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Surgery", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Patient", "Patient")
                        .WithMany("Surgeries")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.SurgeryDoctor", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("SurgeryDoctors")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Surgery", "Surgery")
                        .WithMany("SurgeryDoctors")
                        .HasForeignKey("SurgeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Surgery");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.WorkingHour", b =>
                {
                    b.HasOne("HospitalCmsSystem.Domain.Entities.AppointmentManager", null)
                        .WithMany("WorkingHours")
                        .HasForeignKey("AppointmentManagerId");

                    b.HasOne("HospitalCmsSystem.Domain.Entities.Doctor", "Doctor")
                        .WithMany("WorkingHours")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.AppointmentManager", b =>
                {
                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Blog", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogImages");

                    b.Navigation("DepartmentBlogs");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Department", b =>
                {
                    b.Navigation("DepartmentBlogs");

                    b.Navigation("DepartmentDetails")
                        .IsRequired();

                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("DoctorPatients");

                    b.Navigation("Educations");

                    b.Navigation("Introduction")
                        .IsRequired();

                    b.Navigation("SurgeryDoctors");

                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Introduction", b =>
                {
                    b.Navigation("Educations");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("DoctorPatients");

                    b.Navigation("Surgeries");
                });

            modelBuilder.Entity("HospitalCmsSystem.Domain.Entities.Surgery", b =>
                {
                    b.Navigation("SurgeryDoctors");
                });
#pragma warning restore 612, 618
        }
    }
}
